type Category {
    id: ID!
    name: String!
    images: String
    users: [User]
}

type User {
    id: ID!
    fullname: String!
    email: String!
    phone: String
    categories: [Category]
}

type Product {
    id: ID!
    title: String!
    quantity: Int!
    desc: String
    price: Float!
    user: User!
    category: Category!
}

# Root
type Query {
    # Category
    categories: [Category]
    category(id: ID!): Category

    # User
    users: [User]
    user(id: ID!): User

    # Product
    products: [Product]
    product(id: ID!): Product
    productsByPrice: [Product]
    productsByCategory(categoryId: ID!): [Product]
}

type Mutation {
    # Category
    createCategory(name: String!, images: String): Category
    updateCategory(id: ID!, name: String, images: String): Category
    deleteCategory(id: ID!): Boolean

    # User
    createUser(fullname: String!, email: String!, phone: String, password: String!): User
    updateUser(id: ID!, fullname: String, email: String, phone: String): User
    deleteUser(id: ID!): Boolean

    # Product
    createProduct(title: String!, quantity: Int!, desc: String, price: Float!, userId: ID!, categoryId: ID!): Product
    updateProduct(id: ID!, title: String, quantity: Int, desc: String, price: Float, userId: ID, categoryId: ID): Product
    deleteProduct(id: ID!): Boolean
}
